package userinterface.NGOHeadRole;

import model.enterprise.Enterprise;
import model.organization.Organization;
import model.organization.NGOHeadOrganization;
import model.userAccount.User;
import model.taskbuffer.AngelInvestFundRequest;
import model.taskbuffer.TaskRequest;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.PawcareSystem;
import model.network.Network;
import model.organization.RescuerOrganization;
import model.taskbuffer.RescueRequest;

public class NGOHeadWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NGOHeadWorkAreaJPanel
     */
    private JPanel jPanel;
    private User userAccount;
    private NGOHeadOrganization ngoOrganization;
    private Enterprise enterprise;
    private PawcareSystem ecoSystem;

    public NGOHeadWorkAreaJPanel(JPanel jpanel, User userAccount, 
            Organization organization, Enterprise enterprise, PawcareSystem ecoSystem) {
        initComponents();
        this.enterprise = enterprise;
        this.jPanel = jpanel;
        this.ngoOrganization = (NGOHeadOrganization) organization;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        processRequestBtn1 = new javax.swing.JButton();
        initiateRescueButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        workRequestJTable.setBackground(new java.awt.Color(102, 102, 0));
        workRequestJTable.setForeground(new java.awt.Color(255, 255, 255));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Location", "Sender", "Receiver", "Status", "Amount", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        btnAssign.setBackground(new java.awt.Color(102, 102, 0));
        btnAssign.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Allocate To Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("NGO Head Work Area");

        processRequestBtn1.setBackground(new java.awt.Color(102, 102, 0));
        processRequestBtn1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        processRequestBtn1.setForeground(new java.awt.Color(255, 255, 255));
        processRequestBtn1.setText("Process Request");
        processRequestBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequestBtn1ActionPerformed(evt);
            }
        });

        initiateRescueButton.setBackground(new java.awt.Color(102, 102, 0));
        initiateRescueButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        initiateRescueButton.setForeground(new java.awt.Color(255, 255, 255));
        initiateRescueButton.setText("Initiate Rescue");
        initiateRescueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initiateRescueButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Location");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ngo11.png"))); // NOI18N
        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(42, 42, 42)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAssign)
                                .addGap(89, 89, 89)
                                .addComponent(processRequestBtn1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(initiateRescueButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(157, 157, 157))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processRequestBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(40, 40, 40)
                .addComponent(initiateRescueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first ");
            return;
        } else {
            TaskRequest request = (AngelInvestFundRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equals("Sent to Secretary")) {
                request.setReceiver(userAccount);
                request.setStatus("Pending on " + request.getReceiver().getEmployee().getName());
                populateTable();
                JOptionPane.showMessageDialog(null, "Success !! Request is allocated to you ");
            } else {
                JOptionPane.showMessageDialog(null, "Can't assign this work request, as the work request is in " + request.getStatus() + " status", "Warning!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void processRequestBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequestBtn1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first ");
            return;
        } else {
            AngelInvestFundRequest fundRequest = (AngelInvestFundRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (fundRequest.getStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Cannot process a Rejected Request", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (fundRequest.getStatus().equalsIgnoreCase("Sent to Treasurer")) {
                JOptionPane.showMessageDialog(null, "Request already processed" , "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (fundRequest.getStatus().equalsIgnoreCase("Sent to Secretary")) {
                JOptionPane.showMessageDialog(null, "Please allocate selected request first");
                return;
            }
            if(!userAccount.equals(fundRequest.getReceiver())){
                JOptionPane.showMessageDialog(null, "Not Authorized", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!userAccount.getEmployee().equals(fundRequest.getReceiver().getEmployee())) {
                JOptionPane.showMessageDialog(null, "Request allocate to other Officer", "Warning!", JOptionPane.WARNING_MESSAGE);
                return;
            }

            NGOHeadProcessWorkRequestJPanel panel = new NGOHeadProcessWorkRequestJPanel(jPanel, userAccount, fundRequest, enterprise);
            jPanel.add("secretaryProcessWorkRequestJPanel", panel);
            CardLayout layout = (CardLayout) jPanel.getLayout();
            layout.next(jPanel);

        }
    }//GEN-LAST:event_processRequestBtn1ActionPerformed

    private void initiateRescueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initiateRescueButtonActionPerformed
        // TODO add your handling code here:
        String location = jTextField1.getText().trim();
        if (location.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
            return;
        }
        
        RescueRequest rescueRequest = new RescueRequest(location);
        rescueRequest.setSender(userAccount);
        rescueRequest.setStatus("Sent");
        
        Organization org = null;
        
        List<Network> networks = ecoSystem.getNetworks();

            for (Network network : networks) {
                List<Enterprise> enterprises = network.getEnterpriseDirectory().getEnterpriseList();
                for (Enterprise enterprise : enterprises) {
                    List<Organization> organizations = enterprise.getOrganizationDirectory().getOrganizationsDirectory();
                    for (Organization organization : organizations) {
                        if (organization instanceof RescuerOrganization) {
                            org = organization;
                            break;
                        }
                    }
                }
            }

            if (org != null) {
                org.getWorkQueue().getWorkRequests().add(rescueRequest);
                userAccount.getWorkQueue().getWorkRequests().add(rescueRequest);
            }
            
        JOptionPane.showMessageDialog(null, "Successfully initiated request");
        jTextField1.setText("");
        
    }//GEN-LAST:event_initiateRescueButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (TaskRequest request : ngoOrganization.getWorkQueue().getWorkRequests()) {
            String status = request.getStatus();
            Object[] row = new Object[6];
            row[0] = ((AngelInvestFundRequest) request);
            row[1] = request.getSender().getEmployee().getName();
            if (status.equalsIgnoreCase("Sent to Angel Investor") || status.equalsIgnoreCase("Sent to NGO Head")) {
                row[2] = null;
            } else {
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            }
            row[3] = status;
            row[4] = ((AngelInvestFundRequest) request).getRequestAmount();
            row[5] = ((AngelInvestFundRequest) request).getMessage();

            model.addRow(row);
        }
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        workRequestJTable.setRowSorter(sorter);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton initiateRescueButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton processRequestBtn1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
